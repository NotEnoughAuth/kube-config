apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: traefik-dashboard
  namespace: traefik
  annotations:
    kubernetes.io/ingress.class: traefik-external
spec:
  entryPoints:
    - websecure
  routes:
    - match: Host(`traefik.local.opryga.com`) && PathPrefix(`/`)
      kind: Rule
      # middlewares:
      # - name: default-headers
      # - name: local-ip-list
      # - name: oauth-forward-auth
      services:
        - name: api@internal
          kind: TraefikService
  tls:
    secretName: local-opryga-com-tls # give it the ole tls cert

---
# Authenticated requests to /oauth2/ will be forwarded to the oauth-proxy service
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: oauth-proxy-path
  namespace: traefik
  annotations:
    kubernetes.io/ingress.class: traefik-external
spec:
  entryPoints:
    - websecure # or websecure for HTTPS
  routes:
    - match: Host(`traefik.local.opryga.com`) && PathPrefix(`/oauth2/`) # Replace with your domain
      kind: Rule
      services:
        - name: oauth-proxy
          port: 4180
  # Uncomment and configure for HTTPS
  tls:
    secretName: auth-opryga-com-tls

---
# add externalName service for oauth-proxy
apiVersion: v1
kind: Service
metadata:
  name: oauth-proxy
  namespace: traefik
spec:
  type: ExternalName
  externalName: oauth-proxy.ms-sso.svc.cluster.local
  ports:
    - name: http
      port: 4180
      targetPort: 4180
