apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: crowdsec-dashboard
  namespace: crowdsec
  annotations:
    kubernetes.io/ingress.class: traefik-external
    gethomepage.dev/href: "https://crowdsec.local.opryga.com"
    gethomepage.dev/enabled: "true"
    gethomepage.dev/name: "Crowdsec Dashboard"
    gethomepage.dev/description: "Crowdsec Dashboard"
    gethomepage.dev/group: "Internal Kubernetes Services"
    gethomepage.dev/icon: "crowdsec.png"
spec:
  entryPoints:
    - websecure
  routes:
    - match: Host(`crowdsec.local.opryga.com`) && PathPrefix(`/`)
      kind: Rule
      middlewares:
        # - name: default-headers
        - name: local-ip-list
          namespace: traefik
        - name: oauth-forward-auth
          namespace: traefik
        - name: oauth-headers
          namespace: traefik
        - name: crowdsec-bouncer
          namespace: traefik
      services:
        - name: crowdsec-service
          port: 3000
  tls:
    secretName: local-opryga-com-tls # give it the ole tls cert

---
# Authenticated requests to /oauth2/ will be forwarded to the oauth-proxy service
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: crowdsec-oauth-proxy
  namespace: crowdsec
  annotations:
    kubernetes.io/ingress.class: traefik-external
spec:
  entryPoints:
    - websecure # or websecure for HTTPS
  routes:
    - match: Host(`crowdsec.local.opryga.com`) && PathPrefix(`/oauth2/`) # Replace with your domain
      kind: Rule
      services:
        - name: oauth-proxy
          port: 4180
      middlewares:
        - name: crowdsec-bouncer
          namespace: traefik
  # Uncomment and configure for HTTPS
  tls:
    secretName: auth-opryga-com-tls

---
# add externalName service for oauth-proxy
apiVersion: v1
kind: Service
metadata:
  name: oauth-proxy
  namespace: crowdsec
spec:
  type: ExternalName
  externalName: oauth-proxy.ms-sso.svc.cluster.local
  ports:
    - name: http
      port: 4180
      targetPort: 4180
